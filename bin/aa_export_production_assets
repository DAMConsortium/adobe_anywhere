#!/usr/bin/env ruby
aa_base_dir = File.expand_path('../../', __FILE__)
aa_lib_dir = File.join(aa_base_dir, 'lib')

$:.unshift(aa_lib_dir) unless $:.include?(aa_lib_dir)

require 'pp'
require 'securerandom'

require 'cli'
require 'adobe_anywhere/api/utilities'
options = AdobeAnywhere::API.default_options.merge({
   :log_to => STDERR,
   :log_level => Logger::WARN,
   :options_file_path => File.expand_path(File.basename($0, '.*'), '~/.options'),
   production_name: 'test',
   exporter_preset_name: 'ipad',
   mount_point: 'export',
})
#options[:host_address] = '10.42.1.109'
op = common_option_parser.new
op.on('--production-name NAME', 'The name of the production to use the assets from.',
      "\tdefault: #{options[:production_name]}") { |v| options[:production_name] = v}
op.on('--exporter-preset-name NAME', 'The name of the exporter preset to use when exporting.',
    "\tdefault: #{options[:exporter_preset_name]}") { |v| options[:exporter_preset_name] = v }
op.on('--mount-point NAME', 'The name of the mount point to export to',
    "\tdefault: #{options[:mount_point]}") { |v| options[:mount_point] = v }
op.on('--directory NAME', 'The directory to export to.', '\tdefault: The current timestamp') { |v| options[:directory] = v }
op.on('--adobe-anywhere-host-address HOSTADDRESS', 'The AdobeAnywhere server address.',
      "\tdefault: #{options[:host_address]}") { |v| options[:host_address] = v }
op.on('--adobe-anywhere-host-port PORT', 'The port on the AdobeAnywhere server to connect to.',
      "\tdefault: #{options[:port]}") { |v| options[:port] = v }
op.on('--adobe-anywhere-username USERNAME', 'The username to login with. This will be ignored if cookie contents is set and the force login parameter is false.',
      "\tdefault: #{options[:username]}") { |v| options[:username] = v }
op.on('--adobe-anywhere-password PASSWORD', 'The password to login with. This will be ignored if cookie contents is set and the force login parameter is false.',
      "\tdefault: #{options[:password]}") { |v| options[:password] = v }
add_common_options
op.parse_common

@aa = AdobeAnywhere::API::Utilities.new(options)
@aa.login

#Export a production's asset to a location on a mount point
#./aa --method-name production_export_asset_with_name_lookup --method-arguments '{"production_name":"Test", "exporter_preset_name":"XPC", "asset_id":"07db277c-3eb5-4319-af45-2bca9e77c0b3", "destination_path":"eamedia://export/test/1.mov"}'

exporter_preset_name = options[:exporter_preset_name]
exporter_preset_name ||= 'ipad'

production_name = options[:production_name]
production_name ||= 'test'

mount_point = options[:mount_point]
mount_point ||= 'export'

directory = options[:directory]
directory ||= Time.now.to_i.to_s

production_assets = @aa.production_asset_list(production_name: production_name)
production_assets.each do |production_id, assets|
  puts "Production: (#{production_id}) #{assets}"
  assets.each do |asset|
    puts "\tAsset: #{asset}"
    asset_id = asset['ea:assetId']
    filename = SecureRandom.urlsafe_base64(24)
    destination_path = "eamedia://#{File.join(mount_point, directory, filename)}"
    puts "\t\tDestination Path: #{destination_path}"
    @aa.production_export_asset_with_name_lookup(production_id: production_id, asset_id: asset_id, exporter_preset_name: exporter_preset_name, destination_path: destination_path)
  end
end




